mode: user.javascript
mode: command
and code.language: javascript
-
# Keywords
return: insert("return ")
break: insert("break;")
continue: insert("continue;")
const: insert("const ")
let: insert("let ")
var: insert("var ")
async: insert("async ")
await: insert("await ")
spread insert("...")
this: insert("this")
throw: insert("throw ")
null: insert("null")
none: insert("None")
and: insert(" && ")
or: insert(" || ")
not: insert(" not ")
true: insert("true")
false: insert("false")
divide [by]: insert(" / ")
multiply [by]: insert(" * ")
exponent: insert(" ** ")
modulo: insert(" % ")
assign: insert(" = ")
is equal: insert(" === ")
is not equal: insert(" !== ")
minus assign: insert(" -= ")
plus assign: insert(" += ")
multiply assign: insert(" *= ")
divide assign: insert(" /= ")
greater equal: insert(" >= ")
lesser equal: insert(" <= ")
comment: insert("# ")
string: insert("str")
integer: insert("int")
boolean: insert("bool")
float: insert("float")
any: insert("Any")

# Live templates
import: insert("import ")
import from: user.invoke_live_template("importdefault")
class: user.invoke_live_template("class")
method: user.invoke_live_template("method")
class method: user.invoke_live_template("classmethod")
lambda: user.invoke_live_template("lambda")
if: user.invoke_live_template("if")
ellif: user.invoke_live_template("elseif")
else: user.invoke_live_template("else")
try: user.invoke_live_template("try")
catch: user.invoke_live_template("catch")
finally: user.invoke_live_template("finally")
for loop: user.invoke_live_template("fori")
for of: user.invoke_live_template("forof")
for in: user.invoke_live_template("forin")
while: user.invoke_live_template("while")
switch: user.invoke_live_template("switch")
case: user.invoke_live_template("case")
default: user.invoke_live_template("default")
format string: user.invoke_live_template("fstring")

# Actions
fix imports: user.run_jetbrains_action("Optimize Imports")

# Other
finish:
    edit.line_end()
    insert(';')
    key(enter)
